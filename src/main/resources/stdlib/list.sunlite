import "bag.lox";
import "abstract_list.lox";

class<T> List implements AbstractList {
    var _length: number = 0;
    var _array: array<<T>>;

    fun init(){
        this._array = arrayof(<<T>> 1);
    }

    fun insert(index: number, o: <T>): boolean {
        if(this._length <= index) return false;
        this._array[index] = o;
        return true;
    }

    fun add(o: <T>): boolean {
        if(size(this._array) < this._length + 1){
            resize(this._array, this._length + 1);
        }
        this._array[this._length] = o;
        this._length = this._length + 1;
        return true;
    }

    fun remove(o: <T>): boolean {
        if(!this.contains(o)) return false;
        var index: number = this.indexOf(o);
        return this.removeAt(index);
    }

    fun removeAt(index: number): boolean {
        if(index != -1){
            this._array[index] = nil;
            for(var i: number = index; i < this._length; i += 1){
                var s: number = size(this._array);
                if(i+1 >= s){
                    resize(this._array,this._length+1);
                }
                this._array[i] = this._array[i + 1];
                if(i+1 >= s){
                    resize(this._array,this._length-1);
                }
            }
            if(size(this._array) > this._length - 1){
                resize(this._array, this._length - 1);
            }
            this._length = this._length - 1;
            return true;
        }
        return false;
    }

    fun indexOf(o: <T>): number {
        for(var i: number = 0; i < this._length; i += 1){
            if(this.get(i) == o){
                return i;
            }
        }
        return -1;
    }

    fun contains(o: <T>): boolean {
        for(var i: number = 0; i < this._length; i += 1){
            if(this.get(i) == o){
                return true;
            }
        }
        return false;
    }

    fun size(): number {
        return this._length;
    }

    fun isEmpty(): boolean { return this._length == 0; }

    fun get(i: number): <T> {
        return this._array[i];
    }

    fun forEach(callback: function) {
        for(var i: number = 0; i < this._length; i += 1){
            callback(this.get(i));
        }
    }

    fun forEachIndexed(callback: function) {
        for(var i: number = 0; i < this._length; i += 1){
            callback(i,this.get(i));
        }
    }
}