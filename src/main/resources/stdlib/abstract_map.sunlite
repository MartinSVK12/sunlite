interface<K,V> AbstractMap {
    fun size(): number
    fun isEmpty(): boolean

    fun put(key: <K>, value: <V>): <V>|nil
    fun get(key: <K>): <V>|nil
    fun getOrDefault(key: <K>, default: <V>): <V>|nil
    fun remove(key: <K>): <V>|nil
    fun containsKey(key: <K>): boolean
    fun containsValue(value: <V>): boolean
    fun replace(key: <K>, newValue: <V>): <V>|nil

    fun clear()

    fun forEach(callback: function)
    fun computeIfAbsent(key: <K>, func: function)
    fun computeIfPresent(key: <K>, func: function)
    fun compute(key: <K>, func: function)
}